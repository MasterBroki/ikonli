buildscript {
    repositories {
        jcenter()
        maven { url 'https://plugins.gradle.org/m2/' }
    }

    dependencies {
        classpath 'org.kordamp.gradle:project-gradle-plugin:0.7.0'
        classpath 'org.kordamp.gradle:guide-gradle-plugin:0.7.0'
        classpath 'org.kordamp.gradle:sourcexref-gradle-plugin:0.7.0'
        classpath 'org.ajoberstar:gradle-git-publish:0.3.2'
        classpath 'com.google.gradle:osdetector-gradle-plugin:1.6.0'
        classpath 'gradle.plugin.gradle-java9-collision:plugin:0.2.3'
        classpath 'org.javamodularity:moduleplugin:1.1.1'
    }
}

apply plugin: 'org.kordamp.gradle.project'
apply plugin: 'org.kordamp.gradle.source-xref'
apply plugin: 'com.google.osdetector'

if (!project.hasProperty('bintrayUsername'))  ext.bintrayUsername  = ''
if (!project.hasProperty('bintrayApiKey'))    ext.bintrayApiKey    = ''
if (!project.hasProperty('sonatypeUsername')) ext.sonatypeUsername = ''
if (!project.hasProperty('sonatypePassword')) ext.sonatypePassword = ''

ext.platform = osdetector.os != 'osx' ? osdetector.os : 'mac'

config {
    release = (rootProject.findProperty('release') ?: false).toBoolean()

    info {
        name          = 'Ikonli'
        vendor        = 'Kordamp'
        description   = 'Icon packs for Java applications'
        inceptionYear = '2015'
        tags          = ['icons', 'javafx', 'swing']

        links {
            website      = 'https://github.com/aalmiray/ikonli'
            issueTracker = 'https://github.com/aalmiray/ikonli/issues'
            scm          = 'https://github.com/aalmiray/ikonli.git'
        }

        people {
            person {
                id    = 'aalmiray'
                name  = 'Andres Almiray'
                roles = ['developer']
            }
        }

        implementation { enabled = false }

        credentials {
            sonatype {
                username = project.sonatypeUsername
                password = project.sonatypePassword
            }
        }
    }

    license {
        licenses {
            license {
                id = 'Apache-2.0'
            }
        }
    }

    bintray {
        credentials {
            username = project.bintrayUsername
            password = project.bintrayApiKey
        }
        userOrg = 'aalmiray'
        name    = rootProject.name
        repo    = 'kordamp'
    }

    stats {
        formats = ['xml', 'txt']
    }

    apidoc {
        enabled = false
    }

    sourceHtml {
        overview {
            stylesheet = project(':guide').file('src/javadoc/resources/css/stylesheet.css')
        }
    }

    sourceXref {
        inputEncoding = 'UTF-8'
    }

    javadoc {
        excludes = ['**/*.html', 'META-INF/**']
        options {
            links('http://docs.oracle.com/javase/8/docs/api/',
                  'http://docs.oracle.com/javase/8/javafx/api/')
        }
    }
}

allprojects {
    apply plugin: 'idea'

    repositories {
        jcenter()
    }
}

idea {
    project {
        jdkName '11'
        languageLevel '11'

        ipr {
            withXml { provider ->
                def node = provider.asNode()
                node.component.find { it.'@name' == 'VcsDirectoryMappings' }?.mapping[0].'@vcs' = 'Git'

                def compilerConfiguration = node.component.find { it.'@name' == 'CompilerConfiguration' }
                compilerConfiguration.remove(compilerConfiguration.annotationProcessing)
                compilerConfiguration.append(new XmlParser().parseText('''
    <annotationProcessing>
      <profile default="true" name="Default" enabled="true">
        <processorPath useClasspath="true" />
      </profile>
    </annotationProcessing>'''))
            }
        }
    }
}

subprojects { subproj ->
    if (!subproj.name.contains('guide')) {
        apply plugin: 'java'
        apply plugin: 'org.jonnyzzz.java9c'
        apply plugin: 'org.javamodularity.moduleplugin'

        dependencies {
            testCompile 'junit:junit:4.12'
        }

        license {
            mapping {
                fxml = 'XML_STYLE'
            }
            exclude '**/*.ttf'
            exclude '**/*.eot'
            exclude '**/*.svg'
            exclude '**/*.otf'
            exclude '**/*.woff'
            exclude '**/*.woff2'
            exclude '**/*.css'
            exclude '**/*.md'
            exclude '**/*.txt'
        }
    }
}